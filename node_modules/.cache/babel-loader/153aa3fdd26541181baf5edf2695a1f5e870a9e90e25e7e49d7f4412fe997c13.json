{"ast":null,"code":"import{GoogleGenerativeAI,HarmCategory,HarmBlockThreshold}from\"@google/generative-ai\";const apiKey=process.env.GEMINI_API_KEY||\"AIzaSyAnGJBRlC39Hfl52yxDH3DTFCySZUJgZ4Y\";const genAI=new GoogleGenerativeAI(apiKey);const model=genAI.getGenerativeModel({model:\"gemini-1.5-flash\"});const generationConfig={temperature:1,topP:0.95,topK:64,maxOutputTokens:8192,responseMimeType:\"text/plain\"};async function run(prompt){const chatSession=model.startChat({generationConfig,history:[]});try{const result=await chatSession.sendMessage(prompt);console.log(\"API Response:\",result.response.text);// Log the API response\nreturn result.response.text;}catch(error){console.error(\"Error during API call:\",error);throw new Error(\"Failed to fetch response from the Generative AI API\");}}export default run;","map":{"version":3,"names":["GoogleGenerativeAI","HarmCategory","HarmBlockThreshold","apiKey","process","env","GEMINI_API_KEY","genAI","model","getGenerativeModel","generationConfig","temperature","topP","topK","maxOutputTokens","responseMimeType","run","prompt","chatSession","startChat","history","result","sendMessage","console","log","response","text","error","Error"],"sources":["C:/Users/Mohana/Desktop/geminiai/geminiai/src/Config/gemini.js"],"sourcesContent":["\r\n\r\n\r\n\r\nimport {\r\n    GoogleGenerativeAI,\r\n    HarmCategory,\r\n    HarmBlockThreshold,\r\n  } from \"@google/generative-ai\";\r\n  \r\n  const apiKey = process.env.GEMINI_API_KEY || \"AIzaSyAnGJBRlC39Hfl52yxDH3DTFCySZUJgZ4Y\";\r\n  const genAI = new GoogleGenerativeAI(apiKey);\r\n  \r\n  const model = genAI.getGenerativeModel({\r\n    model: \"gemini-1.5-flash\",\r\n  });\r\n  \r\n  const generationConfig = {\r\n    temperature: 1,\r\n    topP: 0.95,\r\n    topK: 64,\r\n    maxOutputTokens: 8192,\r\n    responseMimeType: \"text/plain\",\r\n  };\r\n  \r\n  async function run(prompt) {\r\n    const chatSession = model.startChat({\r\n      generationConfig,\r\n      history: [],\r\n    });\r\n  \r\n    try {\r\n      const result = await chatSession.sendMessage(prompt);\r\n      console.log(\"API Response:\", result.response.text); // Log the API response\r\n      return result.response.text;\r\n    } catch (error) {\r\n      console.error(\"Error during API call:\", error);\r\n      throw new Error(\"Failed to fetch response from the Generative AI API\");\r\n    }\r\n  }\r\n  \r\n  export default run;\r\n  "],"mappings":"AAIA,OACIA,kBAAkB,CAClBC,YAAY,CACZC,kBAAkB,KACb,uBAAuB,CAE9B,KAAM,CAAAC,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,cAAc,EAAI,yCAAyC,CACtF,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAP,kBAAkB,CAACG,MAAM,CAAC,CAE5C,KAAM,CAAAK,KAAK,CAAGD,KAAK,CAACE,kBAAkB,CAAC,CACrCD,KAAK,CAAE,kBACT,CAAC,CAAC,CAEF,KAAM,CAAAE,gBAAgB,CAAG,CACvBC,WAAW,CAAE,CAAC,CACdC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,EAAE,CACRC,eAAe,CAAE,IAAI,CACrBC,gBAAgB,CAAE,YACpB,CAAC,CAED,cAAe,CAAAC,GAAGA,CAACC,MAAM,CAAE,CACzB,KAAM,CAAAC,WAAW,CAAGV,KAAK,CAACW,SAAS,CAAC,CAClCT,gBAAgB,CAChBU,OAAO,CAAE,EACX,CAAC,CAAC,CAEF,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAH,WAAW,CAACI,WAAW,CAACL,MAAM,CAAC,CACpDM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEH,MAAM,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAE;AACpD,MAAO,CAAAL,MAAM,CAACI,QAAQ,CAACC,IAAI,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,IAAI,CAAAC,KAAK,CAAC,qDAAqD,CAAC,CACxE,CACF,CAEA,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}